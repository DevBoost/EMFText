package org.emftext.sdk.codegen;

import java.io.PrintWriter;

import org.emftext.runtime.resource.ITextPrinter;
import org.emftext.runtime.resource.ITextResource;

public class TextPrinterGenerator extends BaseGenerator {
	
	private String basePrinterClassName; 
	
	public TextPrinterGenerator(String csPrinterClassName, String csPackageName, String basePrinterClassName){
		super(csPrinterClassName, csPackageName);
		this.basePrinterClassName = basePrinterClassName;
	}
	
	@Override
	public boolean generate(PrintWriter out) {
		boolean basenull = basePrinterClassName == null;
		out.println("package " + super.getResourcePackageName() + ";");
		out.println();
	    if (basenull) {
	    	out.println("import org.eclipse.emf.ecore.EObject;");
	    }
		out.println();
	    out.println("/**");
		out.println("* This is the printer class used by EMFText.");
		if (!basenull) {
			out.println("* Users may implement own behavior by overriding printing methods in the printer base.");
			out.println("* The baseclass contains a pretty printer implementation generated by EMFText which");
			out.println("* is not granted to work in all cases, but should work in most cases.");			
		}
		out.println("*/");
	    out.println("public class " + super.getResourceClassName() + (basenull ? " implements " + ITextPrinter.class.getName() : " extends " + basePrinterClassName)+ " {");
	    out.println();
	    out.println("\tpublic " + super.getResourceClassName() + "(java.io.OutputStream o, " + ITextResource.class.getName() + " resource) {");
	    if (!basenull) {
	    	out.println("\t\tsuper(o, resource);");
	    }
	    out.println("\t}");
	    
	    if (basenull) {
	    	out.println();
	    	out.println("\tpublic void print(EObject arg0) throws java.io.IOException {");
	    	out.println("\t\t// TODO insert printer implementation here.");
	    	out.println("\t}");
	    }
	    out.println("}");
		return true;
	}
	
	


}
