/*******************************************************************************
 * Copyright (c) 2006-2010 
 * Software Technology Group, Dresden University of Technology
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0 
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *   Software Technology Group - TU Dresden, Germany 
 *      - initial API and implementation
 ******************************************************************************/
package org.emftext.sdk;

import org.emftext.sdk.codegen.OptionManager;
import org.emftext.sdk.concretesyntax.ConcreteSyntax;
import org.emftext.sdk.concretesyntax.OptionTypes;

/**
 * An enumeration of all plug-in types that might be generated by EMFText.
 */
public abstract class PluginDescriptor implements IPluginDescriptor {

	private OptionTypes option;
	
	public PluginDescriptor(OptionTypes option) {
		this.option = option;
	}
	
	public abstract String getPluginName(ConcreteSyntax syntax);
	/* (non-Javadoc)
	 * @see org.emftext.sdk.IPluginDescriptor#getBasePackage(org.emftext.sdk.concretesyntax.ConcreteSyntax)
	 */
	public abstract String getBasePackage(ConcreteSyntax syntax);
	
	/* (non-Javadoc)
	 * @see org.emftext.sdk.IPluginDescriptor#getName(org.emftext.sdk.concretesyntax.ConcreteSyntax)
	 */
	public String getName(ConcreteSyntax syntax) {
		String pluginID = OptionManager.INSTANCE.getStringOptionValue(syntax, option);
		if (pluginID != null) {
			// use package plug-in from option
			return pluginID;
		} else {
			// use default plug-in name
			return getPluginName(syntax);
		}
	}
}
