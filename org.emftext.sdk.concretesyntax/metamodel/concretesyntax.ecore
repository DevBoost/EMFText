<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="concretesyntax"
    nsURI="http://www.emftext.org/sdk/concretesyntax" nsPrefix="org.emftext.sdk.concretesyntax">
  <eClassifiers xsi:type="ecore:EClass" name="GenPackageDependentElement" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="package" lowerBound="1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenPackage"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="packageLocationHint" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConcreteSyntax" eSuperTypes="#//GenPackageDependentElement #//Annotable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A specification of the concrete syntax for an Ecore metamodel."/>
    </eAnnotations>
    <eOperations name="getOperatorRuleSubset" upperBound="-1" eType="#//Rule">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.Rule> subset = new  org.eclipse.emf.common.util.BasicEList&lt; org.emftext.sdk.concretesyntax.Rule>();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (identifier == null) {&#xD;&#xA;&#x9;&#x9;&#x9;return subset;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.Rule rule : getOperatorRules()) {&#xD;&#xA;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.Annotation annotation = rule.getOperatorAnnotation();&#xD;&#xA;&#x9;&#x9;&#x9; java.lang.String value = annotation.getValue( org.emftext.sdk.concretesyntax.OperatorAnnotationProperty.SUPERCLASS.toString());&#xD;&#xA;&#x9;&#x9;&#x9;if (identifier.equals(value)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;subset.add(rule);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return subset;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="identifier" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eOperations name="getActiveStartSymbols" upperBound="-1" eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.eclipse.emf.codegen.ecore.genmodel.GenClass> symbols = new  org.eclipse.emf.common.util.BasicEList&lt; org.eclipse.emf.codegen.ecore.genmodel.GenClass>();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;symbols.addAll(getStartSymbols());&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (symbols.size() > 0) {&#xD;&#xA;&#x9;&#x9;&#x9;return symbols;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.Import> imports = getImports();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.Import importedElement : imports) {&#xD;&#xA;&#x9;&#x9;&#x9;final  org.emftext.sdk.concretesyntax.ConcreteSyntax importedSyntax = importedElement.getConcreteSyntax();&#xD;&#xA;&#x9;&#x9;&#x9;if (importedSyntax != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;symbols.addAll(importedSyntax.getActiveStartSymbols());&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return symbols;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllRules" upperBound="-1" eType="#//Rule">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;//EStructuralFeature eFeature = ConcretesyntaxPackage.Literals.CONCRETE_SYNTAX__ALL_RULES;&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.Rule> l = new  org.eclipse.emf.common.util.BasicEList&lt; org.emftext.sdk.concretesyntax.Rule>(getRules().size());&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.Rule rule : getRules()) {&#xD;&#xA;&#x9;&#x9;&#x9;// don't add rules that are @override rules with remove=true&#xD;&#xA;&#x9;&#x9;&#x9;if (!rule.isOverrideRemoveRule()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;l.add(rule);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.Import aImport : getImports()) {&#xD;&#xA;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.ConcreteSyntax importedCS = aImport.getConcreteSyntax();&#xD;&#xA;&#x9;&#x9;&#x9;if (importedCS != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;outer: for ( org.emftext.sdk.concretesyntax.Rule importedRule : importedCS.getAllRules()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.Rule rule : getRules()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// don't add rules that have @override rules for same&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// meta-class&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (rule.isOverrideRule(importedRule.getMetaclass())) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;continue outer;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;l.add(importedRule);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return  org.eclipse.emf.common.util.ECollections.unmodifiableEList(l);&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getOperatorRules" upperBound="-1" eType="#//Rule">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;initialiseAnnotatedOperatorRules();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return get_operatorRules();&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="initialiseAnnotatedOperatorRules">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;if (is_operatorRulesInitialized()) {&#xD;&#xA;&#x9;&#x9;&#x9;return;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;set_operatorRulesInitialized(true);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; java.util.List&lt; org.emftext.sdk.concretesyntax.Rule> operatorRules = getOperatorRules();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; java.util.List&lt; java.lang.String> operatorRuleSubsets = getOperatorRuleSubsets();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.Rule rule : getAllRules()) {&#xD;&#xA;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.Annotation operatorAnnotation = rule.getOperatorAnnotation();&#xD;&#xA;&#x9;&#x9;&#x9;if (operatorAnnotation != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;boolean added = false;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;for ( java.util.ListIterator&lt; org.emftext.sdk.concretesyntax.Rule> it = operatorRules.listIterator(); it.hasNext();) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.Rule expressionRule = it.next(); &#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (expressionRule.getOperatorWeight() > rule.getOperatorWeight()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;operatorRules.add(it.previousIndex(), rule);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;added = true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (!added) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;operatorRules.add(rule);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; java.lang.String identifier = operatorAnnotation.getValue( org.emftext.sdk.concretesyntax.OperatorAnnotationProperty.SUPERCLASS.toString());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (identifier != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;operatorRuleSubsets.add(identifier);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getOperatorRuleSubsets" upperBound="-1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;initialiseAnnotatedOperatorRules();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return get_operatorRuleSubsets();&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getGenClassCache" eType="#//GenClassCache">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;if (get_genClassCache() == null) {&#xD;&#xA;&#x9;&#x9;&#x9;set_genClassCache( org.emftext.sdk.concretesyntax.ConcretesyntaxFactory.eINSTANCE.createGenClassCache());&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return get_genClassCache();&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isImportedRule" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return rule.getSyntax() != this;&#xD;&#xA;"/>
        <details key="documentation" value="Returns true if the given rule was defined in the given syntax.&#xD;&#xA;If the rule is defined in an imported syntax, this method returns false.&#xD;&#xA; &#xD;&#xA;@param syntax the syntax that refers to the rule&#xD;&#xA;@param rule the rule to check&#xD;&#xA;@return true if the rule is contained, false if it is imported"/>
      </eAnnotations>
      <eParameters name="rule" eType="#//Rule"/>
    </eOperations>
    <eOperations name="getEClassUtil" eType="#//EClassUtil">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;if (get_eClassUtil() == null) {&#xD;&#xA;&#x9;&#x9;&#x9;set_eClassUtil( org.emftext.sdk.concretesyntax.ConcretesyntaxFactory.eINSTANCE.createEClassUtil());&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return get_eClassUtil();&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getClassesWithSyntax" upperBound="-1" eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; java.util.Collection&lt; org.emftext.sdk.concretesyntax.Rule> rules = getAllRules();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.eclipse.emf.codegen.ecore.genmodel.GenClass> foundGenClasses = new  org.eclipse.emf.common.util.BasicEList&lt; org.eclipse.emf.codegen.ecore.genmodel.GenClass>();&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.Rule rule : rules) {&#xD;&#xA;&#x9;&#x9;&#x9;if (excludeOperatorRules &amp;&amp; rule.getOperatorAnnotation() != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9; org.eclipse.emf.codegen.ecore.genmodel.GenClass subClassCand = rule.getMetaclass();&#xD;&#xA;&#x9;&#x9;&#x9;foundGenClasses.add(subClassCand);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return foundGenClasses;&#xD;&#xA;"/>
        <details key="documentation" value="Collects all the subclasses for which concrete syntax is defined."/>
      </eAnnotations>
      <eParameters name="excludeOperatorRules" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="getSubClassesWithSyntax" upperBound="-1" eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.eclipse.emf.codegen.ecore.genmodel.GenClass> subClasses = new  org.eclipse.emf.common.util.BasicEList&lt; org.eclipse.emf.codegen.ecore.genmodel.GenClass>();&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.ecore.EClass ecoreClass = superClass.getEcoreClass();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; org.emftext.sdk.concretesyntax.EClassUtil eClassUtil = getEClassUtil();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.eclipse.emf.codegen.ecore.genmodel.GenClass subClassCand : getClassesWithSyntax(excludeOperatorRules)) {&#xD;&#xA;&#x9;&#x9;&#x9;if (eClassUtil.isSubClass(subClassCand.getEcoreClass(), ecoreClass)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;subClasses.add(subClassCand);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return subClasses;&#xD;&#xA;"/>
        <details key="documentation" value="Collects all the subclasses for which concrete syntax is defined."/>
      </eAnnotations>
      <eParameters name="superClass" eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass"/>
      <eParameters name="excludeOperatorRules" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    </eOperations>
    <eOperations name="getAllTokenStyles" upperBound="-1" eType="#//TokenStyle">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.TokenStyle> allStyles = new  org.eclipse.emf.common.util.BasicEList&lt; org.emftext.sdk.concretesyntax.TokenStyle>();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;allStyles.addAll(getTokenStyles());&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;addImportedTokenStyles(allStyles);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; org.emftext.sdk.concretesyntax.DefaultTokenStyleAdder adder = org.emftext.sdk.concretesyntax.ConcretesyntaxFactory.eINSTANCE.createDefaultTokenStyleAdder();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;adder.addDefaultTokenStyles(this, allStyles);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return allStyles;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="addTokenStyle">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;for ( java.lang.String tokenName : newStyle.getTokenNames()) {&#xD;&#xA;&#x9;&#x9;&#x9;boolean exists = containsTokenStyle(existingStyles, tokenName);&#xD;&#xA;&#x9;&#x9;&#x9;if (!exists) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.TokenStyle newTokenStyle = org.emftext.sdk.concretesyntax.ConcretesyntaxFactory.eINSTANCE.createTokenStyle();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;newTokenStyle.getTokenNames().add(tokenName);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;newTokenStyle.setRgb(newStyle.getRgb());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;newTokenStyle.getFontStyles().addAll(newStyle.getFontStyles());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;existingStyles.add(newTokenStyle);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="existingStyles" upperBound="-1" eType="#//TokenStyle"/>
      <eParameters name="newStyle" eType="#//TokenStyle"/>
    </eOperations>
    <eOperations name="containsTokenStyle" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.TokenStyle existingStyle : styles) {&#xD;&#xA;&#x9;&#x9;&#x9;for ( java.lang.String existingName : existingStyle.getTokenNames()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (existingName.equals(tokenName)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return false;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="styles" upperBound="-1" eType="#//TokenStyle"/>
      <eParameters name="tokenName" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    </eOperations>
    <eOperations name="addImportedTokenStyles">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;// add the imported token styles&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.Import> imports = getImports();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.Import importedElement : imports) {&#xD;&#xA;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.ConcreteSyntax importedSyntax = importedElement.getConcreteSyntax();&#xD;&#xA;&#x9;&#x9;&#x9;if (importedSyntax != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.TokenStyle> importedStyles = importedSyntax.getAllTokenStyles();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.TokenStyle importedStyle : importedStyles) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;addTokenStyle(allStyles, importedStyle);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;"/>
        <details key="documentation" value="&#xD;&#xA; Reads all token styles from imported syntaxes and&#xD;&#xA; merges them with the styles defined in the current syntax. If a token&#xD;&#xA; styles exists both in an imported and in the current syntax the one from&#xD;&#xA; the current syntax overrides the imported one.&#xD;&#xA;"/>
      </eAnnotations>
      <eParameters name="allStyles" upperBound="-1" eType="#//TokenStyle"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="startSymbols" upperBound="-1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="activeTokens" upperBound="-1"
        eType="#//CompleteTokenDefinition" transient="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="imports" upperBound="-1"
        eType="#//Import" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="options" upperBound="-1"
        eType="#//Option" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="tokens" upperBound="-1"
        eType="#//TokenDirective" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="syntheticTokens" upperBound="-1"
        eType="#//CompleteTokenDefinition" transient="true" containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Contains all synthesized tokens. This includes the quoted tokens and the predefined tokens."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="tokenStyles" upperBound="-1"
        eType="#//TokenStyle" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="allTokenDirectives" upperBound="-1"
        eType="#//TokenDirective" transient="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rules" lowerBound="1" upperBound="-1"
        eType="#//Rule" containment="true" eOpposite="#//Rule/syntax"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="_operatorRules" upperBound="-1"
        eType="#//Rule" transient="true" derived="true" resolveProxies="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="_operatorRuleSubsets" upperBound="-1"
        eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"
        transient="true" defaultValueLiteral="" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="_operatorRulesInitialized"
        eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="_genClassCache" lowerBound="1"
        eType="#//GenClassCache" transient="true" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="_eClassUtil" eType="#//EClassUtil"
        transient="true" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="abstract" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A flag that is used to tag syntax definitions as abstract."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Import" eSuperTypes="#//GenPackageDependentElement #//Annotable">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Import statements allow to reuse existing metamodels and syntax definitions."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="prefix" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A short prefix that is used to reference the imported elements."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="concreteSyntax" eType="#//ConcreteSyntax"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="csLocationHint" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A URI where the concrete syntax definition to import is located."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SyntaxElement" abstract="true">
    <eOperations name="getContainingRule" eType="#//Rule">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.emftext.sdk.concretesyntax.Rule rule = null;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.ecore.EObject o = this;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;do {&#xD;&#xA;&#x9;&#x9;&#x9;if (o instanceof  org.emftext.sdk.concretesyntax.Rule) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;rule = ( org.emftext.sdk.concretesyntax.Rule) o;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;o = o.eContainer();&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;} while (rule == null &amp;&amp; o != null);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return rule;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="children" upperBound="-1"
        eType="#//SyntaxElement" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Rule" eSuperTypes="#//Annotable #//SyntaxElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines the concrete textual syntax for a metaclass."/>
    </eAnnotations>
    <eOperations name="getOperatorAnnotation" eType="#//Annotation">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.Annotation annotation : getAnnotations()) {&#xD;&#xA;&#x9;&#x9;&#x9;if (annotation.getType() ==  org.emftext.sdk.concretesyntax.AnnotationType.OPERATOR) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return annotation;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return null;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getOperatorWeight" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EInt">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.emftext.sdk.concretesyntax.Annotation operatorAnnotation = this.getOperatorAnnotation();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (operatorAnnotation != null) {&#xD;&#xA;&#x9;&#x9;&#x9; java.lang.String ruleWeightString = operatorAnnotation.getValue( org.emftext.sdk.concretesyntax.OperatorAnnotationProperty.WEIGHT.toString());&#xD;&#xA;&#x9;&#x9;&#x9;if (ruleWeightString != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return  java.lang.Integer.parseInt(ruleWeightString);&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} catch ( java.lang.NumberFormatException e) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// ignore exception. invalid numbers are signaled by&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// returning MIN_VALUE&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return  java.lang.Integer.MIN_VALUE;&#xD;&#xA;"/>
        <details key="documentation" value="&#xD;&#xA; Returns the weight of this rule if it is an operator rule.&#xD;&#xA; If the rule is not an operator rule or the specified weight&#xD;&#xA; in the operator annotation is not a number, Integer.MIN_VALUE &#xD;&#xA; is returned.&#xD;&#xA;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getDefinition" lowerBound="1" eType="#//Choice">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.SyntaxElement> children = getChildren();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;// there should be at most one child&#xD;&#xA;&#x9;&#x9;assert children == null || children.size() == 1;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (children.size() > 0) {&#xD;&#xA;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.SyntaxElement firstChild = children.get(0);&#xD;&#xA;&#x9;&#x9;&#x9;if (firstChild instanceof  org.emftext.sdk.concretesyntax.Choice) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return ( org.emftext.sdk.concretesyntax.Choice) firstChild;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// there should be no element other than Choice&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;assert false;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return null;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="hasAnnotation" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.Annotation annotation : getAnnotations()) {&#xD;&#xA;&#x9;&#x9;&#x9;if (annotation.getType() == type) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (key != null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.KeyValuePair parameter : annotation.getParameters()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (key.equals(parameter.getKey())&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; parameter.getValue().equals(value)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return false;&#xD;&#xA;"/>
        <details key="documentation" value="&#xD;&#xA; Checks whether this rule is annotated with the given AnnotationType.&#xD;&#xA; If a key and a value is given it is further checked whether the&#xD;&#xA; annotation specifies this key and value. &#xD;&#xA;"/>
      </eAnnotations>
      <eParameters name="type" eType="#//AnnotationType"/>
      <eParameters name="key" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
      <eParameters name="value" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    </eOperations>
    <eOperations name="isOverrideRemoveRule" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;// TODO mseifert: use constant here&#xD;&#xA;&#x9;&#x9;return hasAnnotation( org.emftext.sdk.concretesyntax.AnnotationType.OVERRIDE, &quot;remove&quot;, &quot;true&quot;);&#xD;&#xA;"/>
        <details key="documentation" value="&#xD;&#xA; Checks whether this rule is annotated with @Override(remove=&quot;true&quot;).&#xD;&#xA;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isOverrideRule" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (metaClass == null || getMetaclass() == metaClass) {&#xD;&#xA;&#x9;&#x9;&#x9;if (hasAnnotation( org.emftext.sdk.concretesyntax.AnnotationType.OVERRIDE, null, null)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return false;&#xD;&#xA;"/>
        <details key="documentation" value="&#xD;&#xA; Checks whether this rule is annotated with @Override.&#xD;&#xA;"/>
      </eAnnotations>
      <eParameters name="metaClass" eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="metaclass" lowerBound="1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="syntax" lowerBound="1"
        eType="#//ConcreteSyntax" eOpposite="#//ConcreteSyntax/rules"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Choice" eSuperTypes="#//SyntaxElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines alternative syntax for an element of parts of it."/>
    </eAnnotations>
    <eOperations name="getOptions" upperBound="-1" eType="#//Sequence">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.Sequence> options = new  org.eclipse.emf.common.util.BasicEList&lt; org.emftext.sdk.concretesyntax.Sequence>();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.SyntaxElement child : getChildren()) {&#xD;&#xA;&#x9;&#x9;&#x9;if (child instanceof  org.emftext.sdk.concretesyntax.Sequence) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;options.add(( org.emftext.sdk.concretesyntax.Sequence) child);&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// there should be no elements other than Sequence elements in the&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// list of children&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;assert false;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return options;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Sequence" eSuperTypes="#//SyntaxElement">
    <eOperations name="getParts" upperBound="-1" eType="#//Definition">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.Definition> parts = new  org.eclipse.emf.common.util.BasicEList&lt; org.emftext.sdk.concretesyntax.Definition>();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.SyntaxElement child : getChildren()) {&#xD;&#xA;&#x9;&#x9;&#x9;if (child instanceof  org.emftext.sdk.concretesyntax.Definition) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;parts.add(( org.emftext.sdk.concretesyntax.Definition) child);&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// there should be no elements other than Definition elements in the&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// list of children&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;assert false;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return parts;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Definition" abstract="true" eSuperTypes="#//SyntaxElement">
    <eOperations name="hasMinimalCardinalityOneOrHigher" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return true;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="hasNoOptionalPart" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return false;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="computeCardinalityString" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.emftext.sdk.concretesyntax.Cardinality cardinality =  org.emftext.sdk.concretesyntax.Cardinality.NONE;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (this instanceof  org.emftext.sdk.concretesyntax.CardinalityDefinition) {&#xD;&#xA;&#x9;&#x9;&#x9;cardinality = (( org.emftext.sdk.concretesyntax.CardinalityDefinition) this).getCardinality();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (cardinality ==  org.emftext.sdk.concretesyntax.Cardinality.NONE) {&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;} else if (cardinality ==  org.emftext.sdk.concretesyntax.Cardinality.PLUS) {&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;+&quot;;&#xD;&#xA;&#x9;&#x9;} else if (cardinality ==  org.emftext.sdk.concretesyntax.Cardinality.QUESTIONMARK) {&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;?&quot;;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;*&quot;;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;"/>
        <details key="documentation" value="&#xD;&#xA; Returns a string representation of the cardinality of the&#xD;&#xA;' or the&#xD;&#xA; empty string.&#xD;&#xA; &#xD;&#xA; @param definition&#xD;&#xA; @return&#xD;&#xA;"/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CardinalityDefinition" abstract="true"
      eSuperTypes="#//Definition">
    <eOperations name="hasMinimalCardinalityOneOrHigher" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return getCardinality() ==  org.emftext.sdk.concretesyntax.Cardinality.NONE || getCardinality() ==  org.emftext.sdk.concretesyntax.Cardinality.PLUS;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="hasNoOptionalPart" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return !&#xD;&#xA;&#x9;&#x9;&#x9;(getCardinality() ==  org.emftext.sdk.concretesyntax.Cardinality.QUESTIONMARK ||&#xD;&#xA;&#x9;&#x9;&#x9; getCardinality() ==  org.emftext.sdk.concretesyntax.Cardinality.STAR);&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="cardinality" eType="#//Cardinality"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Terminal" abstract="true" eSuperTypes="#//CardinalityDefinition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="feature" lowerBound="1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenFeature"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CsString" eSuperTypes="#//Definition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A keyword that is used to represent instances of a metaclass."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="WhiteSpaces" eSuperTypes="#//Definition">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="amount" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LineBreak" eSuperTypes="#//Definition">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="tab" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Cardinality">
    <eLiterals name="none" literal=""/>
    <eLiterals name="plus" value="1" literal="+">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Allows to repeat the preceding syntax element multiple times."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="star" value="2" literal="*">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Allows to repeat the preceding syntax element multiple times (including zero times)."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="questionmark" value="3" literal="?">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Tags the preceding syntax element as optional."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CompoundDefinition" eSuperTypes="#//CardinalityDefinition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A group of syntax elements that must appear together."/>
    </eAnnotations>
    <eOperations name="getDefinition" eType="#//Choice">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.SyntaxElement> children = getChildren();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;// there should be at most one child&#xD;&#xA;&#x9;&#x9;assert children == null || children.size() == 1;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if (children.size() > 0) {&#xD;&#xA;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.SyntaxElement firstChild = children.get(0);&#xD;&#xA;&#x9;&#x9;&#x9;if (firstChild instanceof  org.emftext.sdk.concretesyntax.Choice) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return ( org.emftext.sdk.concretesyntax.Choice) firstChild;&#xD;&#xA;&#x9;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;// there should be no element other than Choice&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;assert false;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return null;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RegexComposer">
    <eOperations name="getComposedRegex" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;visitedTokens.add(token);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; java.lang.StringBuilder result = new  java.lang.StringBuilder();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (token instanceof  org.emftext.sdk.concretesyntax.RegexComposite) {&#xD;&#xA;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.RegexComposite composite = ( org.emftext.sdk.concretesyntax.RegexComposite) token;&#xD;&#xA;&#x9;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.RegexPart part : composite.getRegexParts()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (part instanceof  org.emftext.sdk.concretesyntax.AtomicRegex) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;result.append(part.getRegex());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;} else if (part instanceof  org.emftext.sdk.concretesyntax.RegexReference) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.RegexReference reference = ( org.emftext.sdk.concretesyntax.RegexReference) part;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.AbstractTokenDefinition target = reference.getTarget();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (target == null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (target.eIsProxy()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (visitedTokens.contains(target)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.AbstractTokenDefinition> subVisitedTokens = new  org.eclipse.emf.common.util.BasicEList&lt; org.emftext.sdk.concretesyntax.AbstractTokenDefinition>();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;subVisitedTokens.addAll(visitedTokens);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;result.append(getComposedRegex(target, subVisitedTokens));&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;} else if (token instanceof  org.emftext.sdk.concretesyntax.RegexOwner) {&#xD;&#xA;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.RegexOwner owner = ( org.emftext.sdk.concretesyntax.RegexOwner) token;&#xD;&#xA;&#x9;&#x9;&#x9;result.append(owner.getRegex());&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return result.toString();&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="token" eType="#//AbstractTokenDefinition"/>
      <eParameters name="visitedTokens" upperBound="-1" eType="#//AbstractTokenDefinition"/>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RegexOwner" abstract="true" interface="true">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="regex" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"
        changeable="false" volatile="true" transient="true" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RegexPart" abstract="true" eSuperTypes="#//RegexOwner"/>
  <eClassifiers xsi:type="ecore:EClass" name="RegexComposite" abstract="true" eSuperTypes="#//RegexOwner">
    <eOperations name="getRegex" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; java.lang.StringBuilder result = new  java.lang.StringBuilder();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.RegexPart part : getRegexParts()) {&#xD;&#xA;&#x9;&#x9;&#x9;result.append(part.getRegex());&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return result.toString();&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="regexParts" lowerBound="1"
        upperBound="-1" eType="#//RegexPart" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AtomicRegex" eSuperTypes="#//RegexPart">
    <eOperations name="getRegex" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return getAtomicExpression();&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="atomicExpression" lowerBound="1"
        eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RegexReference" eSuperTypes="#//RegexPart">
    <eOperations name="getRegex" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.emftext.sdk.concretesyntax.AbstractTokenDefinition target = getTarget();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (target == null || target.eIsProxy()) {&#xD;&#xA;&#x9;&#x9;&#x9;return &quot;&quot;;&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;assert target instanceof  org.emftext.sdk.concretesyntax.RegexOwner;&#xD;&#xA;&#x9;&#x9;&#x9;return (( org.emftext.sdk.concretesyntax.RegexOwner) target).getRegex();&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
        eType="#//NamedTokenDefinition"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TokenDirective" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="AbstractTokenDefinition" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="NamedTokenDefinition" abstract="true"
      eSuperTypes="#//AbstractTokenDefinition">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ReferencableTokenDefinition" abstract="true"
      eSuperTypes="#//NamedTokenDefinition #//RegexOwner">
    <eStructuralFeatures xsi:type="ecore:EReference" name="attributeReferences" upperBound="-1"
        eType="#//Placeholder" eOpposite="#//Placeholder/token"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PartialTokenDefinition" eSuperTypes="#//NamedTokenDefinition #//TokenDirective #//RegexComposite">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A fragment of a token definition. Can be used in other token definitions to avoid duplication."/>
    </eAnnotations>
    <eOperations name="getRegex" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.emftext.sdk.concretesyntax.RegexComposer composer = org.emftext.sdk.concretesyntax.ConcretesyntaxFactory.eINSTANCE.createRegexComposer();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return composer.getComposedRegex(this, new  org.eclipse.emf.common.util.BasicEList&lt; org.emftext.sdk.concretesyntax.AbstractTokenDefinition>());&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CompleteTokenDefinition" abstract="true"
      eSuperTypes="#//TokenDirective #//RegexOwner #//ReferencableTokenDefinition">
    <eOperations name="isHidden" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;boolean isReferenced = !getAttributeReferences().isEmpty();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;boolean isCollectInToken = getAttributeName() != null;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return !isReferenced || isCollectInToken;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isUsed" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;boolean isReferenced = !getAttributeReferences().isEmpty();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;boolean isCollectInToken = getAttributeName() != null;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return isReferenced || isCollectInToken;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isImported" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return !syntax.equals(getContainingSyntax(syntax));&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="syntax" lowerBound="1" eType="#//ConcreteSyntax"/>
    </eOperations>
    <eOperations name="getContainingSyntax" eType="#//ConcreteSyntax">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.ecore.EObject container = this.eContainer();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (container instanceof  org.emftext.sdk.concretesyntax.ConcreteSyntax) {&#xD;&#xA;&#x9;&#x9;&#x9;return ( org.emftext.sdk.concretesyntax.ConcreteSyntax) container;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return syntax;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="syntax" lowerBound="1" eType="#//ConcreteSyntax"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="attributeName" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NormalTokenDefinition" eSuperTypes="#//CompleteTokenDefinition #//Annotable #//RegexComposite">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines a token with a name and a regular expression."/>
    </eAnnotations>
    <eOperations name="getRegex" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.emftext.sdk.concretesyntax.RegexComposer composer = org.emftext.sdk.concretesyntax.ConcretesyntaxFactory.eINSTANCE.createRegexComposer();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return composer.getComposedRegex(this, new  org.eclipse.emf.common.util.BasicEList&lt; org.emftext.sdk.concretesyntax.AbstractTokenDefinition>());&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TokenRedefinition" eSuperTypes="#//Annotable #//RegexComposite #//CompleteTokenDefinition">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Redefines the regular expression of an imported token. Also, a new name is assigned to the token."/>
    </eAnnotations>
    <eOperations name="getRegex" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.emftext.sdk.concretesyntax.RegexComposer composer = org.emftext.sdk.concretesyntax.ConcretesyntaxFactory.eINSTANCE.createRegexComposer();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return composer.getComposedRegex(this, new  org.eclipse.emf.common.util.BasicEList&lt; org.emftext.sdk.concretesyntax.AbstractTokenDefinition>());&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="redefinedToken" lowerBound="1"
        eType="#//CompleteTokenDefinition"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="QuotedTokenDefinition" eSuperTypes="#//CompleteTokenDefinition">
    <eOperations name="getRegex" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return getSynthesizedRegex();&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="prefix" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"
        defaultValueLiteral=""/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="suffix" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"
        defaultValueLiteral=""/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="escapeCharacter" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="synthesizedRegex" lowerBound="1"
        eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TokenPriorityDirective" eSuperTypes="#//TokenDirective">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Prioritizes a token over the subsequent tokens."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="token" lowerBound="1" eType="#//CompleteTokenDefinition"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Containment" eSuperTypes="#//Terminal">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Calls the syntax rules of the type of the containment reference."/>
    </eAnnotations>
    <eOperations name="getAllowedSubTypes" upperBound="-1" eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.eclipse.emf.codegen.ecore.genmodel.GenClass> types = new  org.eclipse.emf.common.util.BasicEList&lt; org.eclipse.emf.codegen.ecore.genmodel.GenClass>();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;// is there an explicit type defined?&#xD;&#xA;&#x9;&#x9;if (!getTypes().isEmpty()) {&#xD;&#xA;&#x9;&#x9;&#x9;types = getTypes();&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;types = new  org.eclipse.emf.common.util.BasicEList&lt; org.eclipse.emf.codegen.ecore.genmodel.GenClass>();&#xD;&#xA;&#x9;&#x9;&#x9;types.add(getFeature().getTypeGenClass());&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return types;&#xD;&#xA;"/>
        <details key="documentation" value="&#xD;&#xA; Returns all types that are allowed for the given containment.&#xD;&#xA; If type restrictions are specified in the syntax rule, this&#xD;&#xA; list contains the allowed types. If no restriction are present&#xD;&#xA; the type of the feature references by the containment is &#xD;&#xA; returned.&#xD;&#xA; &#xD;&#xA; @param containment&#xD;&#xA; @return&#xD;&#xA;"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="types" upperBound="-1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Placeholder" abstract="true" eSuperTypes="#//Terminal">
    <eStructuralFeatures xsi:type="ecore:EReference" name="token" lowerBound="1" eType="#//ReferencableTokenDefinition"
        eOpposite="#//ReferencableTokenDefinition/attributeReferences"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PlaceholderUsingSpecifiedToken" eSuperTypes="#//Placeholder"/>
  <eClassifiers xsi:type="ecore:EClass" name="PlaceholderUsingDefaultToken" eSuperTypes="#//Placeholder"/>
  <eClassifiers xsi:type="ecore:EClass" name="PlaceholderInQuotes" eSuperTypes="#//Placeholder">
    <eOperations name="getNormalizedPrefix" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; java.lang.String prefix = getPrefix();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (prefix == null) return prefix;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (prefix.length() == 0) return null;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return prefix;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getNormalizedSuffix" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; java.lang.String suffix = getSuffix();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (suffix == null) return suffix;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (suffix.length() == 0) return null;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return suffix;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getNormalizedEscapeCharacter" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; java.lang.String escapeCharacter = getEscapeCharacter();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (escapeCharacter == null) return escapeCharacter;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (escapeCharacter.length() == 0) return null;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return escapeCharacter;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="toString" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;if (eIsProxy()) return super.toString();&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; java.lang.StringBuffer result = new  java.lang.StringBuffer();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.codegen.ecore.genmodel.GenFeature feature = getFeature();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;if (feature != null &amp;&amp; feature.getEcoreFeature() != null) {&#xD;&#xA;&#x9;&#x9;&#x9;result.append(feature.getName());&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;result.append(&quot;['&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;result.append(getPrefix());&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;result.append(&quot;', '&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;result.append(getSuffix());&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;result.append(&quot;']&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return result.toString();&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="prefix" lowerBound="1"
        eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"
        defaultValueLiteral=""/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="suffix" lowerBound="1"
        eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"
        defaultValueLiteral=""/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="escapeCharacter" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="BooleanTerminal" eSuperTypes="#//Terminal">
    <eOperations name="containsEmptyLiteral" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return &quot;&quot;.equals(getTrueLiteral()) || &quot;&quot;.equals(getFalseLiteral());&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="trueLiteral" lowerBound="1"
        eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="falseLiteral" lowerBound="1"
        eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EnumTerminal" eSuperTypes="#//Terminal">
    <eOperations name="containsEmptyLiteral" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return !getEmptyLiterals().isEmpty();&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getNonEmptyLiterals" upperBound="-1" eType="#//EnumLiteralTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.EnumLiteralTerminal> nonEmptyLiterals = new  org.eclipse.emf.common.util.BasicEList&lt; org.emftext.sdk.concretesyntax.EnumLiteralTerminal>();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.EnumLiteralTerminal literal : getLiterals()) {&#xD;&#xA;&#x9;&#x9;&#x9; java.lang.String text = literal.getText();&#xD;&#xA;&#x9;&#x9;&#x9;if (text != null &amp;&amp; !&quot;&quot;.equals(text)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;nonEmptyLiterals.add(literal);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return nonEmptyLiterals;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getEmptyLiterals" upperBound="-1" eType="#//EnumLiteralTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.EnumLiteralTerminal> emptyLiterals = new  org.eclipse.emf.common.util.BasicEList&lt; org.emftext.sdk.concretesyntax.EnumLiteralTerminal>();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.EnumLiteralTerminal literal : getLiterals()) {&#xD;&#xA;&#x9;&#x9;&#x9; java.lang.String text = literal.getText();&#xD;&#xA;&#x9;&#x9;&#x9;if (&quot;&quot;.equals(text)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;emptyLiterals.add(literal);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return emptyLiterals;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="literals" lowerBound="1"
        upperBound="-1" eType="#//EnumLiteralTerminal" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EnumLiteralTerminal" eSuperTypes="#//SyntaxElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="literal" lowerBound="1"
        eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EEnumLiteral"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="text" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Option">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="A configuration option that parameterizes the code generation process."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1" eType="#//OptionTypes"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="OptionTypes">
    <eLiterals name="GENERATE_TEST_ACTION" literal="generateTestAction">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>true&lt;/code>, EMFText generates a UI action that can be used to test parsing and printing of files containing textual syntax. The default value for this option is &lt;code>false&lt;/code>. This is a non-standard option, which might be removed in future releases of EMFText."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="GENERATE_CODE_FROM_GENERATOR_MODEL" value="1" literal="generateCodeFromGeneratorModel">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>true&lt;/code>, EMFText automatically generates the model code using the generator model referenced in the CS specification. The default value for this option is &lt;code>false&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PLUGIN_XML" value="3" literal="overridePluginXML">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>true&lt;/code>, the plugin.xml file will be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_MANIFEST" value="4" literal="overrideManifest">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the manifest of the resource plug-in will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PARSER" value="5" literal="overrideParser">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Parser class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_TOKEN_RESOLVERS" value="6" literal="overrideTokenResolvers">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>true&lt;/code>, the token resolver classes will be overridden. The default value for this option is &lt;code>false&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_REFERENCE_RESOLVERS" value="7" literal="overrideReferenceResolvers">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>true&lt;/code>, the reference resolver classes will be overridden. The default value for this option is &lt;code>false&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_REFERENCE_RESOLVER_SWITCH" value="8" literal="overrideReferenceResolverSwitch">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the reference resolver switch will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_TOKEN_RESOLVER_FACTORY" value="9" literal="overrideTokenResolverFactory">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the token resolver factory class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PRINTER" value="10" literal="overridePrinter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the printer will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ANTLR_BACKTRACKING" value="12" literal="backtracking">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ANTLR-backtracking is deactivated for parser generation. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ANTLR_MEMOIZE" value="13" literal="memoize">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ANTLR-memoize is deactivated for parser generation. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="AUTOFIX_SIMPLE_LEFTRECURSION" value="14" literal="autofixSimpleLeftrecursion">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>true&lt;/code>, EMFText will try to fix rules that contain simple left recursion. The default value for this option is &lt;code>false&lt;/code>. This is a non-standard option, which might be removed in future releases of EMFText."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="FORCE_EOF" value="15" literal="forceEOF">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, EMFText will generate a parser that does not expect an EOF signal at the end of the input stream. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="DEFAULT_TOKEN_NAME" value="16" literal="defaultTokenName">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="This option can be used to specify the name of the token that is used when no token is given for attributes or non-containment references in syntax rules. Declarations like &lt;code>featureX[]&lt;/code> in CS rules will automatically be expanded to &lt;code>featureX[TOKEN_Y]&lt;/code> if the value of this option is &lt;code>TOKEN_Y&lt;/code>. The default value for this option is &lt;code>TEXT&lt;/code>, which makes the predefined token &lt;code>TEXT&lt;/code> the default token."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="USE_PREDEFINED_TOKENS" value="17" literal="usePredefinedTokens">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, EMFText does not automatically provide predefined tokens (TEXT, WHITESPACE, LINEBREAK). The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="TOKENSPACE" value="18" literal="tokenspace">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The (numerical) value of this option defines how many whitespace should be printed between tokens if no whitespace information is given in CS rules. This option should only be used with the classic printer. The default value of this option is &lt;code>1&lt;/code> if the classic printer is used (see option &lt;code>useClassicPrinter&lt;/code>) and &lt;code>automatic&lt;/code> otherwise."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="RELOAD_GENERATOR_MODEL" value="19" literal="reloadGeneratorModel">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>true&lt;/code>, EMFText reloads the generator model before loading it. This is particular useful, when the meta model (i.e., the Ecore file) is changing a lot during language development. The default value for this option is &lt;code>false&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DOT_CLASSPATH" value="20" literal="overrideClasspath">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the .classpath file of the resource plug-in will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DOT_PROJECT" value="21" literal="overrideProjectFile">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the .project file of the resource plug-in will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_TEXT_RESOURCE" value="22" literal="overrideTextResource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the text resource class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_RESOURCE_FACTORY" value="23" literal="overrideResourceFactory">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the resource factory class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_NEW_FILE_WIZARD" value="24" literal="overrideNewFileWizard">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the new file wizard class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="PARSER_GENERATOR" value="25" literal="parserGenerator">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The name of the parser generator to use. The default value for this option is &lt;code>antlr&lt;/code>, which is also the only valid value. This is a non-standard option, which might be removed in future releases of EMFText."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="SOURCE_FOLDER" value="26" literal="srcFolder">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The name of the folder where EMFText shall store the customizable classes of the resource plug-in in. All classes for which the &lt;code>override&lt;/code> option is set to &lt;code>false&lt;/code> will be stored in this folder."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="BASE_PACKAGE" value="27" literal="basePackage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The name of the base package EMFText shall store the generated classes or the resource plug-in in. If this option is not set, the default value is determined by adding the suffix &lt;code>resource.FILE_EXTENSION&lt;/code> to the base package of the generator model."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="RESOURCE_PLUGIN_ID" value="28" literal="resourcePluginID">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The ID of the generated resource plug-in. The resource plug-in is stored in a folder that is equal to this ID."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_BUILD_PROPERTIES" value="29" literal="overrideBuildProperties">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the build.properties file will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_META_INFORMATION" value="30" literal="overrideMetaInformation">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the MetaInformation class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEFAULT_RESOLVER_DELEGATE" value="31" literal="overrideDefaultResolverDelegate">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the default resolver class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PROBLEM_CLASS" value="32" literal="overrideProblemClass">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the problem class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_SCANNER" value="33" literal="overrideScanner">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Scanner class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_CONTEXT_DEPENDENT_URI_FRAGMENT" value="34" literal="overrideContextDependentURIFragment">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ContextDependentUriFragment class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_CONTEXT_DEPENDENT_URI_FRAGMENT_FACTORY" value="35" literal="overrideContextDependentURIFragmentFactory">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ContextDependentUriFragmentFactory class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DELEGATING_RESOLVE_RESULT" value="36" literal="overrideDelegatingResolveResult">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DelegatingResolveResult class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DUMMY_E_OBJECT" value="37" literal="overrideDummyEObject">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DummyEObject class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_ELEMENT_MAPPING" value="38" literal="overrideElementMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ElementMapping class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_FUZZY_RESOLVE_RESULT" value="39" literal="overrideFuzzyResolveResult">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the FuzzyResolveResult class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEFAULT_TOKEN_RESOLVER" value="40" literal="overrideDefaultTokenResolver">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DefaultTokenResolver class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_LOCATION_MAP" value="41" literal="overrideLocationMap">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the LocationMap class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_REFERENCE_RESOLVE_RESULT" value="42" literal="overrideReferenceResolveResult">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ReferenceResolveResult class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_TOKEN_RESOLVE_RESULT" value="43" literal="overrideTokenResolveResult">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the TokenResolveResult class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_URI_MAPPING" value="45" literal="overrideURIMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the UriMapping class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_HOVER_TEXT_PROVIDER" value="46" literal="overrideHoverTextProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the HoverTextProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PARSE_RESULT" value="47" literal="overrideParseResult">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ParseResult class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_ANTLR_TOKEN_HELPER" value="48" literal="overrideAntlrTokenHelper">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the AntlrTokenHelper class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_BRACKET_SET" value="49" literal="overrideBracketSet">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the BracketSet class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_BROWSER_INFORMATION_CONTROL" value="50" literal="overrideBrowserInformationControl">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the BrowserInformationControl class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_CODE_FOLDING_MANAGER" value="51" literal="overrideCodeFoldingManager">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the CodeFoldingManager class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_COLOR_MANAGER" value="52" literal="overrideColorManager">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ColorManager class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_COMPLETION_PROCESSOR" value="53" literal="overrideCompletionProcessor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the CompletionProcessor class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PARSING_STRATEGY" value="54" literal="overrideParsingStrategy">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ParsingStrategy class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DOC_BROWSER_INFORMATION_CONTROL_INPUT" value="55" literal="overrideDocBrowserInformationControlInput">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DocBrowserInformationControlInput class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_EDITOR_CONFIGURATION" value="55" literal="overrideEditorConfiguration">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the EditorConfiguration class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_EDITOR" value="56" literal="overrideEditor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Editor class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_E_OBJECT_SELECTION" value="57" literal="overrideEObjectSelection">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the EObjectSelection class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_HIGHLIGHTING" value="58" literal="overrideHighlighting">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Highlighting class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_HTML_PRINTER" value="59" literal="overrideHTMLPrinter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the HtmlPrinter class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_HYPERLINK" value="60" literal="overrideHyperlink">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Hyperlink class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_HYPERLINK_DETECTOR" value="61" literal="overrideHyperlinkDetector">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the HyperlinkDetector class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_MARKER_HELPER" value="62" literal="overrideMarkerHelper">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the MarkerHelper class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_OCCURRENCE" value="63" literal="overrideOccurrence">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Occurrence class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_OUTLINE_PAGE" value="64" literal="overrideOutlinePage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the OutlinePage class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_OUTLINE_PAGE_TREE_VIEWER" value="65" literal="overrideOutlinePageTreeViewer">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the OutlinePageTreeViewer class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PLUGIN_ACTIVATOR" value="66" literal="overridePluginActivator">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the PluginActivator class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_POSITION_CATEGORY" value="67" literal="overridePositionCategory">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the PositionCategory class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_POSITION_HELPER" value="68" literal="overridePositionHelper">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the PositionHelper class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PROPERTY_SHEET_PAGE" value="69" literal="overridePropertySheetPage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the PropertySheetPage class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_TEXT_HOVER" value="70" literal="overrideTextHover">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the TextHover class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_TOKEN_SCANNER" value="71" literal="overrideTokenScanner">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the TokenScanner class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_BRACKET_PREFERENCE_PAGE" value="72" literal="overrideBracketPreferencePage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the BracketPreferencePage class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PREFERENCE_CONSTANTS" value="73" literal="overridePreferenceConstants">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the PreferenceConstants class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_OCCURRENCE_PREFERENCE_PAGE" value="74" literal="overrideOccurrencePreferencePage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the OccurrencePreferencePage class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PIXEL_CONVERTER" value="75" literal="overridePixelConverter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the PixelConverter class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PREFERENCE_INITIALIZER" value="76" literal="overridePreferenceInitializer">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the PreferenceInitializer class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_SYNTAX_COLORING_HELPER" value="77" literal="overrideSyntaxColoringHelper">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the SyntaxColoringHelper class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_SYNTAX_COLORING_PREFERENCE_PAGE" value="78" literal="overrideSyntaxColoringPreferencePage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the SyntaxColoringPreferencePage class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_INPUT_STREAM_PROCESSOR_PROVIDER" value="79" literal="overrideIInputStreamProcessorProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IInputStreamProcessorProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_INPUT_STREAM_PROCESSOR" value="80" literal="overrideInputStreamProcessor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the InputStreamProcessor class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_OPTION_PROVIDER" value="81" literal="overrideIOptionProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IOptionProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_OPTIONS" value="82" literal="overrideIOptions">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IOptions class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_RESOURCE_POST_PROCESSOR" value="83" literal="overrideIResourcePostProcessor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IResourcePostProcessor class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_RESOURCE_POST_PROCESSOR_PROVIDER" value="84" literal="overrideIResourcePostProcessorProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IResourcePostProcessorProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_BRACKET_PAIR" value="85" literal="overrideIBracketPair">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IBracketPair class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_COMMAND" value="86" literal="overrideICommand">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ICommand class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_CONFIGURABLE" value="87" literal="overrideIConfigurable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IConfigurable class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_CONTEXT_DEPENDENT_URI_FRAGMENT" value="88" literal="overrideIContextDependentURIFragment">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IContextDependentUriFragment class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_CONTEXT_DEPENDENT_URI_FRAGMENT_FACTORY" value="89"
        literal="overrideIContextDependentURIFragmentFactory">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IContextDependentUriFragmentFactory class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_ELEMENT_MAPPING" value="90" literal="overrideIElementMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IElementMapping class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_EXPECTED_ELEMENT" value="91" literal="overrideIExpectedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IExpectedElement class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_HOVER_TEXT_PROVIDER" value="92" literal="overrideIHoverTextProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IHoverTextProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_LOCATION_MAP" value="93" literal="overrideILocationMap">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ILocationMap class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_PARSE_RESULT" value="94" literal="overrideIParseResult">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IParseResult class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_PROBLEM" value="95" literal="overrideIProblem">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IProblem class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_REFERENCE_MAPPING" value="96" literal="overrideIReferenceMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IReferenceMapping class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_REFERENCE_RESOLVER" value="97" literal="overrideIReferenceResolver">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IReferenceResolver class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_REFERENCE_RESOLVE_RESULT" value="98" literal="overrideIReferenceResolveResult">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IReferenceResolveResult class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_REFERENCE_RESOLVER_SWITCH" value="99" literal="overrideIReferenceResolverSwitch">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IReferenceResolverSwitch class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_TEXT_DIAGNOSTIC" value="100" literal="overrideITextDiagnostic">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ITextDiagnostic class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_TEXT_PARSER" value="101" literal="overrideITextParser">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ITextParser class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_TEXT_PRINTER" value="102" literal="overrideITextPrinter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ITextPrinter class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_TEXT_RESOURCE" value="103" literal="overrideITextResource">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ITextResource class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_META_INFORMATION" value="104" literal="overrideIMetaInformation">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IMetaInformation class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_TEXT_RESOURCE_PLUGIN_PART" value="105" literal="overrideITextResourcePluginPart">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ITextResourcePluginPart class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_TEXT_SCANNER" value="106" literal="overrideITextScanner">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ITextScanner class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_TEXT_TOKEN" value="107" literal="overrideITextToken">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ITextToken class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_TOKEN_RESOLVER" value="108" literal="overrideITokenResolver">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ITokenResolver class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_TOKEN_RESOLVE_RESULT" value="109" literal="overrideITokenResolveResult">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ITokenResolveResult class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_TOKEN_RESOLVER_FACTORY" value="110" literal="overrideITokenResolverFactory">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ITokenResolverFactory class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_TOKEN_STYLE" value="111" literal="overrideITokenStyle">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ITokenStyle class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_URI_MAPPING" value="112" literal="overrideIURIMapping">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IUriMapping class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_E_PROBLEM_TYPE" value="113" literal="overrideEProblemType">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the EProblemType class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_CODE_COMPLETION_HELPER" value="114" literal="overrideCodeCompletionHelper">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the CodeCompletionHelper class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_EXPECTED_CS_STRING" value="115" literal="overrideExpectedCsString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ExpectedCsString class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_EXPECTED_STRUCTURAL_FEATURE" value="116" literal="overrideExpectedStructuralFeature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ExpectedStructuralFeature class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_CAST_UTIL" value="117" literal="overrideCastUtil">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the CastUtil class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_COPIED_E_LIST" value="118" literal="overrideCopiedEList">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the CopiedEList class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_COPIED_E_OBJECT_INTERNAL_E_LIST" value="119" literal="overrideCopiedEObjectInternalEList">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the CopiedEObjectInternalEList class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_E_CLASS_UTIL" value="120" literal="overrideEClassUtil">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the EClassUtil class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_E_OBJECT_UTIL" value="121" literal="overrideEObjectUtil">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the EObjectUtil class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_LIST_UTIL" value="122" literal="overrideListUtil">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ListUtil class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_MAP_UTIL" value="123" literal="overrideMapUtil">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the MapUtil class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_MINIMAL_MODEL_HELPER" value="124" literal="overrideMinimalModelHelper">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the MinimalModelHelper class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_RESOURCE_UTIL" value="125" literal="overrideResourceUtil">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ResourceUtil class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_STREAM_UTIL" value="126" literal="overrideStreamUtil">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the StreamUtil class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_STRING_UTIL" value="127" literal="overrideStringUtil">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the StringUtil class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_TEXT_RESOURCE_UTIL" value="128" literal="overrideTextResourceUtil">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the TextResourceUtil class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_UNICODE_CONVERTER" value="129" literal="overrideUnicodeConverter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the UnicodeConverter class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_ABSTRACT_EXPECTED_ELEMENT" value="130" literal="overrideAbstractExpectedElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the AbstractExpectedElement class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_NEW_FILE_WIZARD_PAGE" value="131" literal="overrideNewFileWizardPage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the NewFileWizardPage class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_BACKGROUND_PARSING_LISTENER" value="132" literal="overrideIBackgroundParsingListener">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IBackgroundParsingListener class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_TERMINATE_PARSING_EXCEPTION" value="133" literal="overrideTerminateParsingException">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the TerminateParsingException class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_UNEXPECTED_CONTENT_TYPE_EXCEPTION" value="134" literal="overrideUnexpectedContentTypeException">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the UnexpectedContentTypeException class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_TEXT_TOKEN" value="135" literal="overrideTextToken">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the TextToken class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="SOURCE_GEN_FOLDER" value="136" literal="srcGenFolder">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The name of the folder where EMFText shall store the generated classes of the resource plug-in in. All classes for which the &lt;code>override&lt;/code> option is set to &lt;code>true&lt;/code> will be stored in this folder."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEFAULT_LOAD_OPTIONS_EXTENSION_POINT_SCHEMA" value="137"
        literal="overrideDefaultLoadOptionsExtensionPointSchema">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the extension point schema for default load options is not overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_ADDITIONAL_EXTENSION_PARSER_EXTENSION_POINT_SCHEMA"
        value="138" literal="overrideAdditionalExtensionParserExtensionPointSchema">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the extension point schema for additional parsers is not overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_RESOURCE_FACTORY_DELEGATOR" value="139" literal="overrideResourceFactoryDelegator">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ResourceFactoryDelegator class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="BASE_RESOURCE_PLUGIN" value="140" literal="baseResourcePlugin">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The plug-in containing the resource implementation for the DSL (if different from the generated resource plug-in). By default this option is not set, which means that the generated resource plug-in provides the resource implementation."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PREFERENCE_PAGE" value="141" literal="overridePreferencePage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the PreferencePage class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ANTLR_PLUGIN_ID" value="142" literal="antlrPluginID">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Sets the ID for the generated common ANTLR runtime plug-in. The default value for this option is &lt;code>org.emftext.commons.antlr3_3_0&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_ANTLR_PLUGIN" value="143" literal="overrideAntlrPlugin">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, no ANTLR common runtime plug-in is generated. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_TOKEN_STYLE_INFORMATION_PROVIDER" value="144" literal="overrideTokenStyleInformationProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the TokenStyleInformationProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_FOLDING_INFORMATION_PROVIDER" value="145" literal="overrideFoldingInformationProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the FoldingInformationProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_BRACKET_INFORMATION_PROVIDER" value="146" literal="overrideBracketInformationProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the BracketInformationProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_SYNTAX_COVERAGE_INFORMATION_PROVIDER" value="147" literal="overrideSyntaxCoverageInformationProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the SyntaxCoverageInformationProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="SAVE_CHANGED_RESOURCES_ONLY" value="148" literal="saveChangedResourcesOnly">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>true&lt;/code>, the generated EMF resource will save only resource when their content (text) has actually changed. The default value for this option is &lt;code>false&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_NEW_FILE_CONTENT_PROVIDER" value="149" literal="overrideNewFileContentProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the NewFileContentProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="LICENCE_HEADER" value="150" literal="licenceHeader">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A URI pointing to a text file that contains a header which shall be added to all generated Java files. This option is useful to include copyright statements in the generated classes. If this option is not set, a default (empty) header is added to all generated Java classes."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_EXPECTED_TERMINAL" value="151" literal="overrideExpectedTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ExpectedTerminal class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_COMPLETION_PROPOSAL" value="152" literal="overrideCompletionProposal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the CompletionProposal class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_BUILDER" value="153" literal="overrideBuilder">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Builder class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_BUILDER_ADAPTER" value="154" literal="overrideBuilderAdapter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the BuilderAdapter class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_BUILDER" value="155" literal="overrideIBuilder">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IBuilder class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_NATURE" value="156" literal="overrideNature">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Nature class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ADDITIONAL_DEPENDENCIES" value="157" literal="additionalDependencies">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A list of comma separated plug-in IDs, which will be added to the manifest of the generated resource plug-in. The default value for this option is an empty list."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="DISABLE_BUILDER" value="158" literal="disableBuilder">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>true&lt;/code>, the builder that is generated and registered by default will not be registered anymore. The default value for this option is &lt;code>false&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ADDITIONAL_EXPORTS" value="159" literal="additionalExports">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A list of comma separated packages, which will be added as exports to the manifest of the generated resource plug-in. The default value for this option is an empty list."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PAIR" value="160" literal="overridePair">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Pair class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_ABSTRACT_INTERPRETER" value="161" literal="overrideAbstractInterpreter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the AbstractInterpreter class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_GRAMMAR_INFORMATION_PROVIDER" value="162" literal="overrideGrammarInformationProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the GrammarInformationProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_ATTRIBUTE_VALUE_PROVIDER" value="163" literal="overrideAttributeValueProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the AttributeValueProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_FOLLOW_SET_PROVIDER" value="164" literal="overrideFollowSetProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the FollowSetProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_SYNTAX_ELEMENT" value="165" literal="overrideSyntaxElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the SyntaxElement class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_KEYWORD" value="166" literal="overrideKeyword">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Keyword class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PLACEHOLDER" value="167" literal="overridePlaceholder">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Placeholder class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_CARDINALITY" value="168" literal="overrideCardinality">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Cardinality class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PRINTER2" value="169" literal="overridePrinter2">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Printer2 class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_CHOICE" value="170" literal="overrideChoice">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Choice class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_COMPOUND" value="171" literal="overrideCompound">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Compound class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_CONTAINMENT" value="172" literal="overrideContainment">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Containment class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_LINE_BREAK" value="173" literal="overrideLineBreak">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the LineBreak class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_SEQUENCE" value="174" literal="overrideSequence">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Sequence class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_WHITE_SPACE" value="175" literal="overrideWhiteSpace">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the WhiteSpace class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_SYNTAX_ELEMENT_DECORATOR" value="176" literal="overrideSyntaxElementDecorator">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the SyntaxElementDecorator class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_REFERENCE_CACHE" value="177" literal="overrideIReferenceCache">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IReferenceCache class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEFAULT_HOVER_TEXT_PROVIDER" value="178" literal="overrideDefaultHoverTextProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DefaultHoverTextProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_FORMATTING_ELEMENT" value="179" literal="overrideFormattingElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the FormattingElement class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_TERMINAL" value="180" literal="overrideTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Terminal class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_LAYOUT_INFORMATION_ADAPTER" value="181" literal="overrideLayoutInformationAdapter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the LayoutInformationAdapter class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_LAYOUT_INFORMATION" value="182" literal="overrideLayoutInformation">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the LayoutInformation class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="USE_CLASSIC_PRINTER" value="183" literal="useClassicPrinter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the classic printer (i.e., the one used before EMFText 1.3.0) will be used. Otherwise the new printer implementation is used. In any case both printers are generated, but only one is used. The default value for this option is &lt;code>false&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="DISABLE_E_VALIDATORS" value="184" literal="disableEValidators">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, constraint validation using registered EValidators will be enabled. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="DISABLE_EMF_VALIDATION_CONSTRAINTS" value="185" literal="disableEMFValidationConstraints">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>true&lt;/code>, constraint validation using the EMF Validation Framework is disabled. The default value for this option is &lt;code>false&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_UI_META_INFORMATION" value="186" literal="overrideUIMetaInformation">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the MetaInformation class of the resource UI plug-in will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="RESOURCE_UI_PLUGIN_ID" value="187" literal="resourceUIPluginID">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The ID of the generated resource UI plug-in. The resource UI plug-in is stored in a folder that is equal to this ID."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_UI_PLUGIN_ACTIVATOR" value="188" literal="overrideUIPluginActivator">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the plug-in activator class of the resource UI plug-in will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="UI_BASE_PACKAGE" value="189" literal="uiBasePackage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The package where to store all classes of the resource UI plug-in in. If this option is not set, the default value is determined by adding the suffix &lt;code>resource.FILE_EXTENSION.ui&lt;/code> to the base package of the generator model."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ADDITIONAL_UI_DEPENDENCIES" value="190" literal="additionalUIDependencies">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A list of comma separated plug-in IDs, which will be added to the manifest of the generated resource UI plug-in. The default value for this option is an empty list."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="ADDITIONAL_UI_EXPORTS" value="191" literal="additionalUIExports">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="A list of comma separated packages, which will be added as exports to the manifest of the generated resource UI plug-in. The default value for this option is an empty list."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_UI_MANIFEST" value="192" literal="overrideUIManifest">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the manifest of the resource UI plug-in will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_UI_BUILD_PROPERTIES" value="193" literal="overrideUIBuildProperties">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the build.properties file of the resource UI plug-in will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_UI_DOT_CLASSPATH" value="194" literal="overrideUIDotClasspath">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the .classpath file of the resource UI plug-in will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_UI_DOT_PROJECT" value="195" literal="overrideUIDotProject">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the .project file of the resource UI plug-in will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="UI_SOURCE_FOLDER" value="196" literal="uiSrcFolder">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The name of the folder where EMFText shall store the customizable classes of the resource UI plug-in in. All classes for which the &lt;code>override&lt;/code> option is set to &lt;code>false&lt;/code> will be stored in this folder."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="UI_SOURCE_GEN_FOLDER" value="197" literal="uiSrcGenFolder">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The name of the folder EMFText shall store the generated classes of the resource UI plug-in in. All classes for which the &lt;code>override&lt;/code> option is set to &lt;code>true&lt;/code> will be stored in this folder."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="GENERATE_UI_PLUGIN" value="198" literal="generateUIPlugin">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, EMFText will not generate the resource UI plug-in. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_BRACKET_HANDLER" value="199" literal="overrideIBracketHandler">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IBracketHandler class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_UI_PLUGIN_XML" value="200" literal="overrideUIPluginXML">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the plugin.xml file of the resource UI plug-in will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PROPOSAL_POST_PROCESSOR" value="201" literal="overrideProposalPostProcessor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ProposalPostProcessor class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="DISABLE_TOKEN_SORTING" value="202" literal="disableTokenSorting">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Disables the automatic sorting of tokens. The default value for this option is &lt;code>false&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_QUICK_FIX" value="203" literal="overrideIQuickFix">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IQuickFix class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_QUICK_FIX" value="204" literal="overrideQuickFix">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the QuickFix class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_ANNOTATION_MODEL" value="205" literal="overrideAnnotationModel">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the AnnotationModel class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_ANNOTATION_MODEL_FACTORY" value="206" literal="overrideAnnotationModelFactory">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, AnnotationModelFactory class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_MARKER_ANNOTATION" value="208" literal="overrideMarkerAnnotation">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the MarkerAnnotation class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_MARKER_RESOLUTION_GENERATOR" value="209" literal="overrideMarkerResolutionGenerator">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the MarkerResolutionGenerator class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_QUICK_ASSIST_ASSISTANT" value="211" literal="overrideQuickAssistAssistant">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the QuickAssistAssistant class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_QUICK_ASSIST_PROCESSOR" value="212" literal="overrideQuickAssistProcessor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the QuickAssistProcessor class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_IMAGE_PROVIDER" value="213" literal="overrideImageProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ImageProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_TOKEN_STYLE" value="214" literal="overrideTokenStyle">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the TokenStyle class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DYNAMIC_TOKEN_STYLER" value="215" literal="overrideDynamicTokenStyler">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DynamicTokenStyler class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="RESOLVE_PROXY_ELEMENTS_AFTER_PARSING" value="216" literal="resolveProxyElementsAfterParsing">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the generated resource class will not resolve references after parsing. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_EXPECTED_BOOLEAN_TERMINAL" value="217" literal="overrideExpectedBooleanTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ExpectedBooleanTerminal class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_BOOLEAN_TERMINAL" value="218" literal="overrideBooleanTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the BooleanTerminal class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_ENUMERATION_TERMINAL" value="219" literal="overrideEnumerationTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the EnumerationTerminal class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_EXPECTED_ENUMERATION_TERMINAL" value="220" literal="overrideExpectedEnumerationTerminal">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ExpectedEnumerationTerminal class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_CHANGE_REFERENCE_QUICK_FIX" value="221" literal="overrideChangeReferenceQuickFix">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ChangeReferenceQuickFix class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_EPROBLEM_SEVERITY" value="222" literal="overrideEProblemSeverity">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the EProblemSeverity class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_RESOURCE_POST_PROCESSOR" value="223" literal="overrideResourcePostProcessor">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the ResourcePostProcessor class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_RESOURCE_PROVIDER" value="224" literal="overrideIResourceProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IResourceProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_BRACKET_HANDLER_PROVIDER" value="225" literal="overrideIBracketHandlerProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IBracketHandlerProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_ANNOTATION_MODEL_PROVIDER" value="226" literal="overrideIAnnotationModelProvider">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IAnnotationModelProvider class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_LAUNCH_CONFIGURATION_DELEGATE" value="227" literal="overrideLaunchConfigurationDelegate">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the LaunchConfigurationDelegate class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_LAUNCH_CONFIGURATION_TAB_GROUP" value="228" literal="overrideLaunchConfigurationTabGroup">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the LaunchConfigurationTabGroup class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_LAUNCH_CONFIGURATION_MAIN_TAB" value="229" literal="overrideLaunchConfigurationMainTab">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the LaunchConfigurationMainTab class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_LAUNCH_SHORTCUT" value="230" literal="overrideLaunchShortcut">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the LaunchShortcurt class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_PROPERTY_TESTER" value="231" literal="overridePropertyTester">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the PropertyTester class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="DISABLE_LAUNCH_SUPPORT" value="232" literal="disableLaunchSupport">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>true&lt;/code>, code that is required to support launching of DSL models is not generated. The default value for this option is &lt;code>false&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_RULE" value="233" literal="overrideRule">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the Rule class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_ABSTRACT_DEBUGGABLE" value="234" literal="overrideAbstractDebuggable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the AbstractDebuggable class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_E_DEBUG_MESSAGE_TYPES" value="235" literal="overrideEDebugMessageTypes">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the EDebugMessage enumeration will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_DEBUG_EVENT_LISTENER" value="236" literal="overrideIDebugEventListener">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IDebugEventListener interface will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_I_INTERPRETER_LISTENER" value="237" literal="overrideIInterpreterListener">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the IInterpreterListener interface will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEBUG_COMMUNICATION_HELPER" value="238" literal="overrideDebugCommunicationHelper">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DebugCommunicationHandler class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEBUG_ELEMENT" value="239" literal="overrideDebugElement">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DebugElement class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEBUGGABLE_INTERPRETER" value="240" literal="overrideDebuggableInterpreter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DebuggableInterpreter class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEBUGGER_LISTENER" value="241" literal="overrideDebuggerListener">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DebuggerListener class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEBUG_MESSAGE" value="242" literal="overrideDebugMessage">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DebugMessage class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEBUG_PROCESS" value="243" literal="overrideDebugProcess">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DebugProcess class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEBUG_PROXY" value="244" literal="overrideDebugProxy">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DebugProxy class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEBUG_TARGET" value="245" literal="overrideDebugTarget">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DebugTarget class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEBUG_THREAD" value="246" literal="overrideDebugThread">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DebugThread class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEBUG_VALUE" value="247" literal="overrideDebugValue">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DebugValue class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEBUG_VARIABLE" value="248" literal="overrideDebugVariable">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DebugVariable class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_LINEBREAK_POINT" value="249" literal="overrideLineBreakpoint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the LinebreakPoint class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_SOURCE_LOCATOR" value="250" literal="overrideSourceLocator">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the SourceLocator class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_SOURCE_LOOKUP_PARTICIPANT" value="251" literal="overrideSourceLookupParticipant">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the SourceLookupParticipant class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_SOURCE_PATH_COMPUTER_DELEGATE" value="252" literal="overrideSourcePathComputerDelegate">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the SourcePathComputerDelegate class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_STACK_FRAME" value="253" literal="overrideStackFrame">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the StackFrame class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="DISABLE_DEBUG_SUPPORT" value="254" literal="disableDebugSupport">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>true&lt;/code>, code that is required to support debugging of DSL models is not generated. The default value for this option is &lt;code>false&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_DEBUG_MODEL_PRESENTATION" value="255" literal="overrideDebugModelPresentation">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the DebugModelPresentation class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_LINE_BREAKPOINT_ADAPTER" value="256" literal="overrideLineBreakpointAdapter">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the LineBreakpointAdapter class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_ADAPTER_FACTORY" value="257" literal="overrideAdapterFactory">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the AdapterFactory class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_LAUNCH_CONFIGURATION_HELPER" value="258" literal="overrideLaunchConfigurationHelper">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the LaunchConfigurationHelper class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="OVERRIDE_NEW_PROJECT_WIZARD" value="259" literal="overrideNewProjectWizard">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>false&lt;/code>, the NewProjectWizard class will not be overridden. The default value for this option is &lt;code>true&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
    <eLiterals name="DISABLE_NEW_PROJECT_WIZARD" value="260" literal="disableNewProjectWizard">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="If set to &lt;code>true&lt;/code>, the new NewProjectWizard is not registered. Use this option if there is already an existing wizard. The default value for this option is &lt;code>false&lt;/code>."/>
      </eAnnotations>
    </eLiterals>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TokenStyle">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Defines syntax highlighting for tokens or keywords."/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="tokenNames" lowerBound="1"
        upperBound="-1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The names of the tokens or the keywords this style is applied to."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="rgb" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The color to show the tokens and keywords in."/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="fontStyles" upperBound="-1"
        eType="#//FontStyle">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="The font styles to use for the tokens and keywords."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="FontStyle">
    <eLiterals name="BOLD"/>
    <eLiterals name="ITALIC" value="1"/>
    <eLiterals name="STRIKETHROUGH" value="2"/>
    <eLiterals name="UNDERLINE" value="3"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Annotation">
    <eOperations name="getValue" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.KeyValuePair parameter : getParameters()) {&#xD;&#xA;&#x9;&#x9;&#x9;if (key.equals(parameter.getKey())){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; java.lang.String value = parameter.getValue();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return value;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return null;&#xD;&#xA;"/>
        <details key="documentation" value="Returns the annotation value for the given key."/>
      </eAnnotations>
      <eParameters name="key" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1" eType="#//AnnotationType"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
        eType="#//KeyValuePair" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Annotable" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="annotations" upperBound="-1"
        eType="#//Annotation" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="AnnotationType">
    <eLiterals name="OVERRIDE" literal="Override"/>
    <eLiterals name="SUPPRESS_WARNINGS" value="1" literal="SuppressWarnings"/>
    <eLiterals name="FOLDABLE" value="2" literal="Foldable"/>
    <eLiterals name="OPERATOR" value="3" literal="Operator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="OperatorAnnotationType">
    <eLiterals name="binary_left_associative"/>
    <eLiterals name="binary_right_associative" value="1"/>
    <eLiterals name="unary_prefix" value="2"/>
    <eLiterals name="unary_postfix" value="3" literal="unary_postfix"/>
    <eLiterals name="primitive" value="4"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="OperatorAnnotationProperty">
    <eLiterals name="type"/>
    <eLiterals name="superclass" value="1"/>
    <eLiterals name="weight" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="KeyValuePair">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" lowerBound="1" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="GenClassCache">
    <eOperations name="getQualifiedInterfaceName" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;if (!get_qualifiedInterfaceNameCache().containsKey(genClass)) {&#xD;&#xA;&#x9;&#x9;&#x9; java.lang.String qualifiedInterfaceName = genClass.getQualifiedInterfaceName();&#xD;&#xA;&#x9;&#x9;&#x9;get_qualifiedInterfaceNameCache().put(genClass, qualifiedInterfaceName);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return get_qualifiedInterfaceNameCache().get(genClass);&#xD;&#xA;"/>
        <details key="documentation" value="Return the qualified name of the interface for the given GenClass."/>
      </eAnnotations>
      <eParameters name="genClass" eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass"/>
    </eOperations>
    <eOperations name="getEscapedTypeName" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; java.lang.String interfaceName = getQualifiedInterfaceName(genClass);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; java.lang.String escapedName = interfaceName.replace(&quot;_&quot;, &quot;_005f&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;escapedName = escapedName.replace(&quot;.&quot;, &quot;_&quot;);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return escapedName;&#xD;&#xA;"/>
        <details key="documentation" value="&#xD;&#xA; Returns an escaped version of the qualified name of the interface for &#xD;&#xA; the given GenClass. Underscores and dots are replaced to be able to use &#xD;&#xA; the returned name, for example, as method name.&#xD;&#xA;"/>
      </eAnnotations>
      <eParameters name="genClass" eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass"/>
    </eOperations>
    <eOperations name="hasMapType" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return java.util.Map.Entry.class.getName().equals(genClass.getEcoreClass().getInstanceClassName());&#xD;&#xA;"/>
        <details key="documentation" value="Checks whether the given GenClass has a map type."/>
      </eAnnotations>
      <eParameters name="genClass" eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass"/>
    </eOperations>
    <eOperations name="containsEqualByName" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;for ( org.eclipse.emf.codegen.ecore.genmodel.GenClass entry : list) {&#xD;&#xA;&#x9;&#x9;&#x9; org.eclipse.emf.ecore.EClass entryClass = entry.getEcoreClass();&#xD;&#xA;&#x9;&#x9;&#x9; org.eclipse.emf.ecore.EClass oClass = genClass.getEcoreClass();&#xD;&#xA;&#x9;&#x9;&#x9;if (entryClass.getName().equals(oClass.getName())&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&amp;&amp; entryClass.getEPackage().getNsURI().equals(&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;oClass.getEPackage().getNsURI())) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return false;&#xD;&#xA;"/>
        <details key="documentation" value="Checks whether the given list of GenClasses contains a GenClass&#xD;&#xA;with the same name and namespace URI as the given GenClass."/>
      </eAnnotations>
      <eParameters name="list" upperBound="-1" eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass"/>
      <eParameters name="genClass" eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="_qualifiedInterfaceNameCache"
        upperBound="-1" eType="#//GenClassCacheEntry" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="GenClassCacheEntry" instanceClassName="java.util.Map$Entry">
    <eStructuralFeatures xsi:type="ecore:EReference" name="key" eType="ecore:EClass platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore#//GenClass"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EClassUtil">
    <eOperations name="isSubClass" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;for ( org.eclipse.emf.ecore.EClass superClassCandidate : subClassCandidate.getEAllSuperTypes()) {&#xD;&#xA;&#x9;&#x9;&#x9;// There seem to be multiple instances of meta classes when accessed&#xD;&#xA;&#x9;&#x9;&#x9;// through the generator model. Therefore, we compare by name.&#xD;&#xA;&#x9;&#x9;&#x9;if (namesAndPackageURIsAreEqual(superClassCandidate, superClass)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;return true;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return false;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="subClassCandidate" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
      <eParameters name="superClass" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
    </eOperations>
    <eOperations name="getSubClasses" upperBound="-1" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.eclipse.emf.ecore.EClass> result = new  org.eclipse.emf.common.util.BasicEList&lt; org.eclipse.emf.ecore.EClass>();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.eclipse.emf.ecore.EClass next : availableClasses) {&#xD;&#xA;&#x9;&#x9;&#x9;if (isSubClass(next, superClass) &amp;&amp;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;isConcrete(next)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;result.add(next);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return result;&#xD;&#xA;"/>
        <details key="documentation" value="&#xD;&#xA; Returns all subclasses of 'superClass' that are contained&#xD;&#xA; in 'availableClasses'.&#xD;&#xA; &#xD;&#xA; @param superClass the superclass&#xD;&#xA; @param availableClasses the set of classes to search in&#xD;&#xA; @return a list of all subclasses of 'superClass'&#xD;&#xA;"/>
      </eAnnotations>
      <eParameters name="superClass" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
      <eParameters name="availableClasses" upperBound="-1" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
    </eOperations>
    <eOperations name="namesAndPackageURIsAreEqual" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return namesAreEqual(classA, classB) &amp;&amp; &#xD;&#xA;&#x9;&#x9;&#x9;packageURIsAreEqual(classA, classB);&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="classA" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
      <eParameters name="classB" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
    </eOperations>
    <eOperations name="packageURIsAreEqual" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; java.lang.String nsURI_A = classA.getEPackage().getNsURI();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; java.lang.String nsURI_B = classB.getEPackage().getNsURI();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return (nsURI_A == null &amp;&amp; nsURI_B == null) || nsURI_A.equals(nsURI_B);&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="classA" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
      <eParameters name="classB" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
    </eOperations>
    <eOperations name="namesAreEqual" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return classA.getName().equals(classB.getName());&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="classA" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
      <eParameters name="classB" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
    </eOperations>
    <eOperations name="isConcrete" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return !eClass.isAbstract() &amp;&amp; !eClass.isInterface();&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="eClass" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
    </eOperations>
    <eOperations name="isNotConcrete" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;return !isConcrete(eClass);&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="eClass" eType="ecore:EClass platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EClass"/>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DefaultTokenStyleAdder">
    <eOperations name="addDefaultTokenStyles">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;// add default styles&#xD;&#xA;&#x9;&#x9;addTokenStylesForKeywords(syntax, allStyles);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;addTokenStylesForQuotedTokens(syntax, allStyles);&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;addTokenStylesForComments(syntax, allStyles);&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="syntax" eType="#//ConcreteSyntax"/>
      <eParameters name="allStyles" upperBound="-1" eType="#//TokenStyle"/>
    </eOperations>
    <eOperations name="addTokenStylesForKeywords">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * All CsStrings that match this regular expression will be recognized&#xD;&#xA;&#x9;&#x9; * as keywords and a default token style (purple and bold face font) &#xD;&#xA;&#x9;&#x9; * will be assigned.&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;final  java.util.regex.Pattern KEYWORD_PATTERN =  java.util.regex.Pattern.compile(getKeywordRegex());&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;final  java.lang.String KEYWORD_COLOR = &quot;800055&quot;;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.Rule rule : syntax.getAllRules()) {&#xD;&#xA;&#x9;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.CsString> csStrings = getAllKeywords(rule);&#xD;&#xA;&#x9;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.CsString csString : csStrings) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (KEYWORD_PATTERN.matcher(csString.getValue()).matches()) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.TokenStyle newStyle = org.emftext.sdk.concretesyntax.ConcretesyntaxFactory.eINSTANCE.createTokenStyle();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;newStyle.setRgb(KEYWORD_COLOR);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;newStyle.getTokenNames().add(csString.getValue());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;newStyle.getFontStyles().add( org.emftext.sdk.concretesyntax.FontStyle.BOLD);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;syntax.addTokenStyle(allStyles, newStyle);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="syntax" eType="#//ConcreteSyntax"/>
      <eParameters name="allStyles" upperBound="-1" eType="#//TokenStyle"/>
    </eOperations>
    <eOperations name="addTokenStylesForQuotedTokens">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; java.lang.String QUOTED_TOKEN_COLOR = &quot;2A00FF&quot;;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.Rule rule : syntax.getAllRules()) {&#xD;&#xA;&#x9;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.PlaceholderInQuotes> placeholders = getAllPlaceholdersInQuotes(rule);&#xD;&#xA;&#x9;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.PlaceholderInQuotes placeholder : placeholders) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.ReferencableTokenDefinition token = placeholder.getToken();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;if (token == null) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;continue;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; java.lang.String tokenName = token.getName();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.TokenStyle newStyle = org.emftext.sdk.concretesyntax.ConcretesyntaxFactory.eINSTANCE.createTokenStyle();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;newStyle.setRgb(QUOTED_TOKEN_COLOR);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;newStyle.getTokenNames().add(tokenName);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;syntax.addTokenStyle(allStyles, newStyle);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="syntax" eType="#//ConcreteSyntax"/>
      <eParameters name="allStyles" upperBound="-1" eType="#//TokenStyle"/>
    </eOperations>
    <eOperations name="isCommentPattern" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;final  java.lang.String SL_COMMENT = &quot;'//'(~('\n'|'\r'|'\uffff'))*&quot;;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;final  java.lang.String ML_COMMENT = &quot;'/*'.*'*/'&quot;;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return SL_COMMENT.equals(regex) || ML_COMMENT.equals(regex);&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="regex" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString"/>
    </eOperations>
    <eOperations name="addTokenStylesForComments">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;final  java.lang.String COMMENT_COLOR = &quot;3F805D&quot;;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; java.util.Collection&lt; org.emftext.sdk.concretesyntax.CompleteTokenDefinition> tokens = syntax.getActiveTokens();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;for ( org.emftext.sdk.concretesyntax.CompleteTokenDefinition tokenDefinition : tokens) {&#xD;&#xA;&#x9;&#x9;&#x9; java.lang.String regex = tokenDefinition.getRegex();&#xD;&#xA;&#x9;&#x9;&#x9;if (isCommentPattern(regex)) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9; org.emftext.sdk.concretesyntax.TokenStyle newStyle = org.emftext.sdk.concretesyntax.ConcretesyntaxFactory.eINSTANCE.createTokenStyle();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;newStyle.setRgb(COMMENT_COLOR);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;newStyle.getTokenNames().add(tokenDefinition.getName());&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;syntax.addTokenStyle(allStyles, newStyle);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="syntax" eType="#//ConcreteSyntax"/>
      <eParameters name="allStyles" upperBound="-1" eType="#//TokenStyle"/>
    </eOperations>
    <eOperations name="getAllKeywords" upperBound="-1" eType="#//CsString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.CsString> allKeywords = new  org.eclipse.emf.common.util.BasicEList&lt; org.emftext.sdk.concretesyntax.CsString>();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.TreeIterator&lt; org.eclipse.emf.ecore.EObject> iterator = rule.eAllContents();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;while (iterator.hasNext()) {&#xD;&#xA;&#x9;&#x9;&#x9; org.eclipse.emf.ecore.EObject next = iterator.next();&#xD;&#xA;&#x9;&#x9;&#x9;if (next instanceof  org.emftext.sdk.concretesyntax.CsString) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;allKeywords.add(( org.emftext.sdk.concretesyntax.CsString) next);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return allKeywords;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="rule" eType="#//Rule"/>
    </eOperations>
    <eOperations name="getAllPlaceholdersInQuotes" upperBound="-1" eType="#//PlaceholderInQuotes">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.EList&lt; org.emftext.sdk.concretesyntax.PlaceholderInQuotes> allPlaceholders = new  org.eclipse.emf.common.util.BasicEList&lt; org.emftext.sdk.concretesyntax.PlaceholderInQuotes>();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9; org.eclipse.emf.common.util.TreeIterator&lt; org.eclipse.emf.ecore.EObject> iterator = rule.eAllContents();&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;while (iterator.hasNext()) {&#xD;&#xA;&#x9;&#x9;&#x9; org.eclipse.emf.ecore.EObject next = iterator.next();&#xD;&#xA;&#x9;&#x9;&#x9;if (next instanceof  org.emftext.sdk.concretesyntax.PlaceholderInQuotes) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;allPlaceholders.add(( org.emftext.sdk.concretesyntax.PlaceholderInQuotes) next);&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return allPlaceholders;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
      <eParameters name="rule" eType="#//Rule"/>
    </eOperations>
    <eOperations name="getKeywordRegex" eType="ecore:EDataType platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="&#xD;&#xA;&#x9;&#x9;final  java.lang.String KEYWORD_REGEX = &quot;([a-z]|[A-Z])|(([a-z]|[A-Z]|[_])([a-z]|[A-Z]|[:]|[-]|[_])+)&quot;;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;return KEYWORD_REGEX;&#xD;&#xA;"/>
        <details key="documentation" value=""/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
</ecore:EPackage>
