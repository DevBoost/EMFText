calc <http://www.emftext.org/language/calc>

Calculation (
	inputVariables Variable*
	outputVariables Variable*
	rules Rule*
	
	getVariable(name EString) Variable
)

Rule (
	condition Expression?
	~target Variable
	right Expression
)

abstract NamedElement (name EString)

Type : NamedElement

Variable : NamedElement (~type Type)

// expressions
abstract Expression
// unary expressions
Negation          : Expression (body Expression)
Compound          : Expression (body Expression)
VariableReference : Expression (~variable Variable)
// binary expressions
abstract BinaryExpression : Expression (left Expression right Expression)
Compare       : BinaryExpression (operator Comp)
Additive      : BinaryExpression (operator PlusMinus)
Multiplictive : BinaryExpression (operator MulDiv)
Or            : BinaryExpression
And           : BinaryExpression
// functions can be added dynamically by adding them to the interpreter context
FunctionCall : Expression, NamedElement (arguments Expression*)
// literals
abstract Literal : Expression
NumberLiteral : Literal (value EDouble)
StringLiteral : Literal (value EString)

// operators
enum Comp (EQ LT LTE GT GTE)
enum PlusMinus (PLUS MINUS)
enum MulDiv (MUL DIV)
