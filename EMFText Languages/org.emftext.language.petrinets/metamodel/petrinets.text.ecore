package petrinets // this is the package name 
        petrinets // this is the namespace prefix
        "http://www.emftext.org/language/petrinets" // the namespace URI 
	{

	class PList extends EClassifier, TypedElement {
	
	}

	class PVoid extends EClassifier {}

	abstract class NameableElement {
		iD attribute EString name (0..1);
	}
	
	abstract class TypedElement {
		reference EClassifier type (0..1);
	}
	
	@"import"("genmodel"="platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore")
	class PetriNet extends NameableElement {
		attribute EString pkg (0..-1);
		attribute EBoolean abstrct (1..1);
		reference EPackage ePackages (1..-1); 
		reference genmodel::GenModel genModels (1..-1);
		reference PetriNet imports (0..-1);
		containment reference Function functions (0..-1);
		containment reference Component components (0..-1) opposite net;
		containment reference Arc arcs (0..-1);
	}

	abstract class Component extends NameableElement {
		reference PetriNet net (1..1) opposite components;
	}

	abstract class Arc {
	}

	class ConsumingArc extends Arc {
		reference Place in (1..1) opposite outgoing;
		reference Transition out (1..1) opposite incoming;
		containment reference FreeVariable freeVariable (1..1);
	}

	class ProducingArc extends Arc {
		reference Transition in (1..1) opposite outgoing;
		reference Place out (1..1) opposite incoming;
		reference Variable output (1..1);
		containment reference Setting settings (1..-1);
	}


	class Setting {
		reference EStructuralFeature feature (1..1);
		attribute SettingOperator settingOperator (1..1);
		reference Variable value (1..1);
	}
	
	serializable enum SettingOperator {
		0 : assign = ":=";
		1 : add = "+=";
	}

	class Place extends Component, TypedElement {
		attribute EBoolean autoinit (1..1);
		reference ProducingArc incoming (0..-1) opposite out; 
		reference ConsumingArc outgoing (0..-1) opposite in;
	}

	class Transition extends Component {
		reference Transition alias (0..1);
		reference ConsumingArc incoming (0..-1) opposite out; 
		reference ProducingArc outgoing (0..-1) opposite in;
		containment reference Expression guard (0..1); 
		containment reference Statement statements (0..-1);
	}

	abstract class Statement extends TypedElement{
	}

	abstract class Variable extends NameableElement, TypedElement {
	}
	
	class FreeVariable extends Variable {
	}
	
	class InitialisedVariable extends Statement, Variable {
		containment reference Expression initialisation (0..1);
	} 

	abstract class Expression extends Statement {
		//reference Expression previousExpression (0..1) opposite nextExpression;
		//containment reference Expression nextExpression (0..1) opposite previousExpression;
	}

	abstract class Function extends NameableElement, TypedElement {
			containment reference Parameter parameters (0..-1);
		reference EClassifier context (1..1);
		attribute EBoolean library (1..1);
		attribute FunctionType functionType (1..1);
	}

	serializable enum FunctionType {
		0 : read = "read";
		1 : write = "write";
	}

	class BasicFunction extends Function {
	}

	class ListFunction extends Function {
			containment reference PGenericType listTypeDef (1..1);
		reference PGenericType returnListType (0..1);
	}

	class PGenericType extends EClassifier {
	}

	class Parameter extends NameableElement, TypedElement {
	}

	class BooleanExpression extends Expression {
		attribute EString operator (1..1);
		containment reference Expression left (1..1);
		containment reference Expression right (1..1);
	}

	abstract class Call extends TypedElement {
		
	}

	class FunctionCall extends Call {
		reference Function function (1..1);
		containment reference Expression parameters (0..-1);
	}
	
	class Cast extends Expression {
		containment reference Expression expression (1..1);
	}
	
	class NestedExpression extends Expression {
		containment reference Expression expression (1..1); 
	}

	class ConstructorCall extends Expression {
		containment reference Setting settings (0..-1);
	}

	class VariableCall extends Expression {
		reference Variable variable (1..1);
	}

	class MemberCallExpression extends Expression {
		containment reference Expression target (1..1);
		containment reference Call calls (1..-1);
	}

	abstract
	
		class Literal extends Expression {}

	class StringLiteral extends Literal {
		attribute EString value (1..1);
	}
	
	class EClassLiteral extends Literal {
		reference EClass clazz (1..1);
	}
	
	class UnaryMinus extends Literal {
		attribute EBoolean minus (1..1);
		containment reference Expression expression (1..1);
	}

	class IntegerLiteral extends Literal {
		attribute EInt value (1..1);
	}

	class BooleanLiteral extends Literal {
		attribute EBoolean value (1..1);
	}

	class DoubleLiteral extends Literal {
		attribute EDouble value (1..1);
	}

	class FloatLiteral extends Literal {
		attribute EFloat value (1..1);
	}

	class LongLiteral extends Literal {
		attribute ELong value (1..1);
	}
	

}