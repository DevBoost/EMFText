Graph Process

Domain blockDomain ModelPackage "http://www.emftext.org/language/rolecore/blockdomain"
		RCPackage "org.emftext.language.rolecore.examples/metamodel/blockDomain.rolecore"{
	Required {
		Block containerBlock (role BlockChildrenRole => process;)
		BlockDiagram blockDiagram (role BlockdiagramElementsRole => process;)
	}
	Create {
		Process process (
			role ModelelementBlockdiagramRole => blockDiagram;
			role ConnectableContainerRole => containerBlock;	
		)
	} 
}
Domain classDomain ModelPackage "http://www.emftext.org/language/rolecore/classdomain"
		RCPackage "org.emftext.language.rolecore.examples/metamodel/classDomain.rolecore"{
	Required {
		Class containerClass (role ClassRolesRole => containerRole;)
		ClassDiagram classDiagram (role ClassdiagramElementsRole => class;)
	}
	SemiRequired{
		Stereotype stereotype (role Name := "process";)
	}
	Create {
		Class class (
						role Name := "?";
						role ModelelementClassdiagramRole => classDiagram; 
						role ModelelementStereotypeRole => stereotype;
					)
		CRole containerRole (
			role CroleClassRole => containerClass;
			role CroleSourceRole => containerChild;
			role CroleCardRole => containerCardinality;
			role Adornment := "COMPOSITION";
		)
		Cardinality containerCardinality (role CardinalityCardRole => containerRole; role CardString := "1..1";)
		Association containerChild (role AssociationSourceRole => containerRole; role AssociationTargetRole => childRole;)
		CRole childRole (
			role CroleClassRole => class;
			role CroleTargetRole => containerChild;
			role CroleCardRole => childCardinality;
			role Adornment := "ASSOCIATION";
		)
		Cardinality childCardinality (role CardinalityCardRole => childRole; role CardString := "1..1";)
	}
}
Equivalences{
	containerBlock := containerClass;
	process role Name := "+" (class role Name/"Operation"); 
	classDiagram:=blockDiagram;
}