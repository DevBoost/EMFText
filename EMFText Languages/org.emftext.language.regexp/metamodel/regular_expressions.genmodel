<?xml version="1.0" encoding="UTF-8" standalone="no"?><genmodel:GenModel xmlns:genmodel="http://www.eclipse.org/emf/2002/GenModel" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:xmi="http://www.omg.org/XMI" complianceLevel="5.0" copyrightFields="false" copyrightText="Copyright (c) 2006-2012&#10;Software Technology Group, Dresden University of Technology&#10;DevBoost GmbH, Berlin, Amtsgericht Charlottenburg, HRB 140026&#10;&#10;All rights reserved. This program and the accompanying materials&#10;are made available under the terms of the Eclipse Public License v1.0&#10;which accompanies this distribution, and is available at&#10;http://www.eclipse.org/legal/epl-v10.html&#10;&#10;Contributors:&#10;  Software Technology Group - TU Dresden, Germany;&#10;  DevBoost GmbH - Berlin, Germany&#10;     - initial API and implementation&#10; " importerID="org.eclipse.emf.importer.ecore" modelDirectory="/org.emftext.language.regexp/src-gen" modelName="Regular_expressions" modelPluginID="org.emftext.language.regexp" xmi:version="2.0">
  <foreignModel>regular_expressions.ecore</foreignModel>
  <genPackages basePackage="org.emftext.language" disposableProviderFactory="true" ecorePackage="regular_expressions.ecore#/" prefix="Regexp">
    <genEnums ecoreEnum="regular_expressions.ecore#//Multiplicity" typeSafeEnumCompatible="false">
      <genEnumLiterals ecoreEnumLiteral="regular_expressions.ecore#//Multiplicity/mandatory"/>
      <genEnumLiterals ecoreEnumLiteral="regular_expressions.ecore#//Multiplicity/plus"/>
      <genEnumLiterals ecoreEnumLiteral="regular_expressions.ecore#//Multiplicity/questionMark"/>
      <genEnumLiterals ecoreEnumLiteral="regular_expressions.ecore#//Multiplicity/star"/>
    </genEnums>
    <genEnums ecoreEnum="regular_expressions.ecore#//EEnum0" typeSafeEnumCompatible="false"/>
    <genClasses ecoreClass="regular_expressions.ecore#//RegularExpression"/>
    <genClasses ecoreClass="regular_expressions.ecore#//Alternative">
      <genFeatures children="true" createChild="true" ecoreFeature="ecore:EReference regular_expressions.ecore#//Alternative/elements" property="None"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//Element">
      <genFeatures children="true" createChild="true" ecoreFeature="ecore:EReference regular_expressions.ecore#//Element/atom" property="None"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute regular_expressions.ecore#//Element/suffix"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//Atom"/>
    <genClasses ecoreClass="regular_expressions.ecore#//ComplexRange">
      <genFeatures children="true" createChild="true" ecoreFeature="ecore:EReference regular_expressions.ecore#//ComplexRange/ranges" property="None"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//AtomicRange" image="false"/>
    <genClasses ecoreClass="regular_expressions.ecore#//IntervalRange">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute regular_expressions.ecore#//IntervalRange/from"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute regular_expressions.ecore#//IntervalRange/to"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//Terminal"/>
    <genClasses ecoreClass="regular_expressions.ecore#//Not">
      <genFeatures children="true" createChild="true" ecoreFeature="ecore:EReference regular_expressions.ecore#//Not/body" property="None"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//Block"/>
    <genClasses ecoreClass="regular_expressions.ecore#//Choice" image="false">
      <genFeatures children="true" createChild="true" ecoreFeature="ecore:EReference regular_expressions.ecore#//Choice/alternatives" property="None"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//CharTerminal">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute regular_expressions.ecore#//CharTerminal/value"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//StringTerminal">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute regular_expressions.ecore#//StringTerminal/value"/>
    </genClasses>
    <genClasses ecoreClass="regular_expressions.ecore#//Dot"/>
    <genClasses ecoreClass="regular_expressions.ecore#//Compound" image="false"/>
  </genPackages>
</genmodel:GenModel>