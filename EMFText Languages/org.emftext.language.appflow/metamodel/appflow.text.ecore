package appflow // this is the package name 
        appflow // this is the namespace prefix
        "http://www.emftext.org/language/appflow" {

	class Application extends Nameable {
			containment reference StateModel statemodel (1..1);
			containment reference Screen screens (0..-1);
			containment reference ScreenTemplate templates (0..-1);
	}
	
	package commons commons "http://www.emftext.org/language/appflow/commons" {

	abstract
	
		class Nameable {
			attribute EString name (1..1);
		}
	}

	package statemodel statemodel "http://www.emftext.org/language/appflow/statemodel" {

	class StateModel {
			containment reference State states (0..-1);
			containment reference Event events (0..-1);
			containment reference Transition transitions (0..-1);
			 derived transient reference State startStates (0..-1);
			 derived transient reference State finalStates (0..-1);
			derived      transient attribute EBoolean canTerminate (1..1);
		}

	class State extends Nameable {
			 derived transient reference State successors (0..-1);
			 derived transient reference State predecessors (0..-1);
			 derived transient reference State reachable (0..-1);
			 derived transient reference Transition fanIn(0..-1);
			 derived transient reference Transition fanOut(0..-1);
			derived      transient attribute EBoolean isCyclic (1..1);
			derived      transient attribute EBoolean isStartState (1..1);
			derived      transient attribute EBoolean isFinalState (1..1);
			containment reference Action action (0..1);
		}

	class Event extends Nameable {}

	class Transition {
			reference State source (1..1);
			reference State target (1..1);
			reference Event event (0..1);
		}
	}

	package actions actions "http://www.emftext.org/language/appflow/actions" {

	abstract
	
		class Action {}

	class ShowScreenAction extends Action {
			reference Screen screen (1..1);
		}

	class JavaAction extends Action {
			@"import"("java"="../../org.emftext.language.java/metamodel/java.ecore")
			reference java::members::Method method (1..1);
		}
	}

	package screenmodel screenmodel "http://www.emftext.org/language/appflow/screenmodel" {

	abstract
	
		class Widget extends Nameable {}

	abstract
	
		class Composite extends Widget {
			containment reference Widget compounds (0..-1);
		}

	class Screen extends Composite {}
	}

	package widgets widgets "http://www.emftext.org/language/appflow/widgets" {

	class Panel extends Composite {}

	class TextField extends Widget {}

	class Button extends Widget {
			attribute EString label (1..1);
			reference Event event (0..1);
		}

	class UIList extends Widget {}

	class Text extends Widget {
			attribute EString text (1..1);
		}
	}
	
	
	// == EXTENSION FOR IMPORT MECHANISM (Reuseware) ==
	package screenimport screenimport "http://www.emftext.org/language/appflow/screenimport" {

	class ScreenImport extends Screen {
			attribute EString id (1..1);
			containment reference ParameterSetting settings (0..-1) opposite screenImport;
		}

	class ParameterSetting {
			reference ScreenImport screenImport (0..1) opposite settings;
			attribute EString parameter (1..1);
			attribute EString value (1..1);
		}

	class ScreenTemplate {
			containment reference Screen screen(1..1);
		}
	}
	// ====
}